version: '3.4'

x-env: &default-env
  DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
  REDIS_URL: redis://redis:6379/0
  EMAIL_HOST: mailhog
  EMAIL_PORT: 1025
  SECRET_KEY: ${SECRET_KEY}
  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}

volumes:
  pg_data: {}

services:
  postgres:
    image: postgres:11.8
    environment:
      # for development only!
      - POSTGRES_PASSWORD=password
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:5.0.7

  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - '8025:8025'
      - '1025:1025'

  assets:
    build:
      context: .
      dockerfile: assets.dockerfile
    privileged: true
    command: yarn dev
    volumes:
      - .:/app
      - /app/node_modules

  django: &django
    build:
      context: .
      dockerfile: django.dockerfile
    restart: on-failure
    privileged: true
    environment: *default-env
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    ports:
      - '80:8000'
    command: /start-django

  celeryworker:
    <<: *django
    ports: []
    command: /start-celeryworker
